
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::AddressType_Street;


our @ISA=qw(XML::Pastor::ComplexType);

SIF::AU::Type::AddressType_Street->mk_accessors( qw(Line1 Line2 Line3 Complex StreetNumber StreetPrefix StreetName StreetType StreetSuffix ApartmentType ApartmentNumberPrefix ApartmentNumber ApartmentNumberSuffix));

SIF::AU::Type::AddressType_Street->XmlSchemaType( bless( {
         'attributeInfo' => {},
         'attributePrefix' => '_',
         'attributes' => [],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SIF::AU::Type::AddressType_Street',
         'contentType' => 'complex',
         'elementInfo' => {
                            'ApartmentNumber' => bless( {
                                                        'class' => 'XML::Pastor::Builtin::normalizedString',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'The number of the apartment.'
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'SIF::AU::Pastor::Meta',
                                                        'minOccurs' => '0',
                                                        'name' => 'ApartmentNumber',
                                                        'nillable' => 'true',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                        'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                      }, 'XML::Pastor::Schema::Element' ),
                            'ApartmentNumberPrefix' => bless( {
                                                              'class' => 'XML::Pastor::Builtin::normalizedString',
                                                              'documentation' => bless( [
                                                                                          bless( {
                                                                                                   'text' => 'Apartment number prefix.'
                                                                                                 }, 'XML::Pastor::Schema::Documentation' )
                                                                                        ], 'Data::HashArray' ),
                                                              'metaClass' => 'SIF::AU::Pastor::Meta',
                                                              'minOccurs' => '0',
                                                              'name' => 'ApartmentNumberPrefix',
                                                              'nillable' => 'true',
                                                              'scope' => 'local',
                                                              'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                              'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                            }, 'XML::Pastor::Schema::Element' ),
                            'ApartmentNumberSuffix' => bless( {
                                                              'class' => 'XML::Pastor::Builtin::normalizedString',
                                                              'documentation' => bless( [
                                                                                          bless( {
                                                                                                   'text' => 'Apartment number suffix.'
                                                                                                 }, 'XML::Pastor::Schema::Documentation' )
                                                                                        ], 'Data::HashArray' ),
                                                              'metaClass' => 'SIF::AU::Pastor::Meta',
                                                              'minOccurs' => '0',
                                                              'name' => 'ApartmentNumberSuffix',
                                                              'nillable' => 'true',
                                                              'scope' => 'local',
                                                              'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                              'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                            }, 'XML::Pastor::Schema::Element' ),
                            'ApartmentType' => bless( {
                                                      'class' => 'XML::Pastor::Builtin::normalizedString',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'Type of apartment, for example, Suite.'
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'SIF::AU::Pastor::Meta',
                                                      'minOccurs' => '0',
                                                      'name' => 'ApartmentType',
                                                      'nillable' => 'true',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                      'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                    }, 'XML::Pastor::Schema::Element' ),
                            'Complex' => bless( {
                                                'class' => 'XML::Pastor::Builtin::normalizedString',
                                                'documentation' => bless( [
                                                                            bless( {
                                                                                     'text' => 'Name of the complex.'
                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                          ], 'Data::HashArray' ),
                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                'minOccurs' => '0',
                                                'name' => 'Complex',
                                                'nillable' => 'true',
                                                'scope' => 'local',
                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                              }, 'XML::Pastor::Schema::Element' ),
                            'Line1' => bless( {
                                              'class' => 'XML::Pastor::Builtin::normalizedString',
                                              'documentation' => bless( [
                                                                          bless( {
                                                                                   'text' => 'Address line 1.'
                                                                                 }, 'XML::Pastor::Schema::Documentation' )
                                                                        ], 'Data::HashArray' ),
                                              'metaClass' => 'SIF::AU::Pastor::Meta',
                                              'minOccurs' => '0',
                                              'name' => 'Line1',
                                              'scope' => 'local',
                                              'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                              'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                            }, 'XML::Pastor::Schema::Element' ),
                            'Line2' => bless( {
                                              'class' => 'XML::Pastor::Builtin::normalizedString',
                                              'documentation' => bless( [
                                                                          bless( {
                                                                                   'text' => 'Address line 2.'
                                                                                 }, 'XML::Pastor::Schema::Documentation' )
                                                                        ], 'Data::HashArray' ),
                                              'metaClass' => 'SIF::AU::Pastor::Meta',
                                              'minOccurs' => '0',
                                              'name' => 'Line2',
                                              'nillable' => 'true',
                                              'scope' => 'local',
                                              'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                              'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                            }, 'XML::Pastor::Schema::Element' ),
                            'Line3' => bless( {
                                              'class' => 'XML::Pastor::Builtin::normalizedString',
                                              'documentation' => bless( [
                                                                          bless( {
                                                                                   'text' => 'Address line 3.'
                                                                                 }, 'XML::Pastor::Schema::Documentation' )
                                                                        ], 'Data::HashArray' ),
                                              'metaClass' => 'SIF::AU::Pastor::Meta',
                                              'minOccurs' => '0',
                                              'name' => 'Line3',
                                              'nillable' => 'true',
                                              'scope' => 'local',
                                              'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                              'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                            }, 'XML::Pastor::Schema::Element' ),
                            'StreetName' => bless( {
                                                   'class' => 'XML::Pastor::Builtin::normalizedString',
                                                   'documentation' => bless( [
                                                                               bless( {
                                                                                        'text' => 'The name of the street.'
                                                                                      }, 'XML::Pastor::Schema::Documentation' )
                                                                             ], 'Data::HashArray' ),
                                                   'metaClass' => 'SIF::AU::Pastor::Meta',
                                                   'minOccurs' => '0',
                                                   'name' => 'StreetName',
                                                   'nillable' => 'true',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                   'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                 }, 'XML::Pastor::Schema::Element' ),
                            'StreetNumber' => bless( {
                                                     'class' => 'XML::Pastor::Builtin::normalizedString',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'The address number assigned to the building.'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'StreetNumber',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'StreetPrefix' => bless( {
                                                     'class' => 'XML::Pastor::Builtin::normalizedString',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'Street prefix like NE'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'StreetPrefix',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'StreetSuffix' => bless( {
                                                     'class' => 'XML::Pastor::Builtin::normalizedString',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'Street suffix like SW.'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'StreetSuffix',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'StreetType' => bless( {
                                                   'class' => 'XML::Pastor::Builtin::normalizedString',
                                                   'documentation' => bless( [
                                                                               bless( {
                                                                                        'text' => 'The type of street. For example, Lane, Blvd., Ave., etc.'
                                                                                      }, 'XML::Pastor::Schema::Documentation' )
                                                                             ], 'Data::HashArray' ),
                                                   'metaClass' => 'SIF::AU::Pastor::Meta',
                                                   'minOccurs' => '0',
                                                   'name' => 'StreetType',
                                                   'nillable' => 'true',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                   'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                 }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'Line1',
                         'Line2',
                         'Line3',
                         'Complex',
                         'StreetNumber',
                         'StreetPrefix',
                         'StreetName',
                         'StreetType',
                         'StreetSuffix',
                         'ApartmentType',
                         'ApartmentNumberPrefix',
                         'ApartmentNumber',
                         'ApartmentNumberSuffix'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'AddressType_Street',
         'nameIsAutoGenerated' => 1,
         'scope' => 'local',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::AddressType_Street>  -  A class generated by L<XML::Pastor> . 


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<ApartmentNumber>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<ApartmentNumberPrefix>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<ApartmentNumberSuffix>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<ApartmentType>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<Complex>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<Line1>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<Line2>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<Line3>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<StreetName>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<StreetNumber>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<StreetPrefix>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<StreetSuffix>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<StreetType>()      - See L<XML::Pastor::Builtin::normalizedString>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
