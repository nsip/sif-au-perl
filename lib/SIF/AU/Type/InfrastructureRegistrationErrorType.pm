
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::InfrastructureRegistrationErrorType;


our @ISA=qw(XML::Pastor::Builtin::token);

SIF::AU::Type::InfrastructureRegistrationErrorType->XmlSchemaType( bless( {
         'base' => 'token|http://www.w3.org/2001/XMLSchema',
         'baseClasses' => [
                            'XML::Pastor::Builtin::token'
                          ],
         'class' => 'SIF::AU::Type::InfrastructureRegistrationErrorType',
         'contentType' => 'simple',
         'derivedBy' => 'restriction',
         'documentation' => bless( [
                                     bless( {
                                              'text' => 'Generic error'
                                            }, 'XML::Pastor::Schema::Documentation' ),
                                     bless( {
                                              'text' => 'The SIF_SourceId is invalid'
                                            }, 'XML::Pastor::Schema::Documentation' ),
                                     bless( {
                                              'text' => 'Requested transport protocol is unsupported'
                                            }, 'XML::Pastor::Schema::Documentation' ),
                                     bless( {
                                              'text' => 'Requested SIF_Version(s) not supported.'
                                            }, 'XML::Pastor::Schema::Documentation' ),
                                     bless( {
                                              'text' => 'Requested SIF_MaxBufferSize is too small'
                                            }, 'XML::Pastor::Schema::Documentation' ),
                                     bless( {
                                              'text' => 'ZIS requires a secure transport'
                                            }, 'XML::Pastor::Schema::Documentation' ),
                                     bless( {
                                              'text' => 'Agent is registered for push mode (returned when a push-mode agent sends a SIF_GetMessage).'
                                            }, 'XML::Pastor::Schema::Documentation' ),
                                     bless( {
                                              'text' => 'ZIS does not support the requested Accept-Encoding value.'
                                            }, 'XML::Pastor::Schema::Documentation' )
                                   ], 'Data::HashArray' ),
         'enumeration' => {
                            '1' => 1,
                            '10' => 1,
                            '2' => 1,
                            '3' => 1,
                            '4' => 1,
                            '6' => 1,
                            '7' => 1,
                            '9' => 1
                          },
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'InfrastructureRegistrationErrorType',
         'scope' => 'global',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::SimpleType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::InfrastructureRegistrationErrorType>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

Generic error

The SIF_SourceId is invalid

Requested transport protocol is unsupported

Requested SIF_Version(s) not supported.

Requested SIF_MaxBufferSize is too small

ZIS requires a secure transport

Agent is registered for push mode (returned when a push-mode agent sends a SIF_GetMessage).

ZIS does not support the requested Accept-Encoding value.


=head1 ISA

This class descends from L<XML::Pastor::Builtin::token>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 SEE ALSO

L<XML::Pastor::Builtin::token>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
