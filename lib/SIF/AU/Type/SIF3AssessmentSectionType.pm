
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::SIF3AssessmentSectionType;

use SIF::AU::Type::RefIdType;
use SIF::AU::Type::SIF3AssessmentSectionType_SectionAssets;
use SIF::AU::Type::SIF3AssessmentSectionType_SectionIdentifiers;
use SIF::AU::Type::SIF3AssessmentSectionType_SectionItemSequenceType;
use SIF::AU::Type::SIF3AssessmentSectionType_SectionItems;
use SIF::AU::Type::SIF3AssessmentSectionType_SectionReentry;
use SIF::AU::Type::SIF3AssessmentSectionType_SectionSealed;
use SIF::AU::Type::SIF_ExtendedElementsType;
use SIF::AU::Type::SIF_MetadataType;

our @ISA=qw(XML::Pastor::ComplexType);

SIF::AU::Type::SIF3AssessmentSectionType->mk_accessors( qw(_RefId SectionVersion SectionPublishDate SectionIdentifiers SectionName SectionItemSequenceType ItemSelectionAlgorithmName ItemSelectionAlgorithm SectionTimeLimit SectionSealed SectionReentry SectionAssets SectionItems SIF_Metadata SIF_ExtendedElements));

# Attribute accessor aliases

sub RefId { &_RefId; }

SIF::AU::Type::SIF3AssessmentSectionType->XmlSchemaType( bless( {
         'attributeInfo' => {
                              'RefId' => bless( {
                                                'class' => 'SIF::AU::Type::RefIdType',
                                                'documentation' => bless( [
                                                                            bless( {
                                                                                     'text' => 'The GUID that uniquely identifies an instance of this object.'
                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                          ], 'Data::HashArray' ),
                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                'name' => 'RefId',
                                                'scope' => 'local',
                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                'type' => 'RefIdType|http://www.SIFinfo.org/au/datamodel/1.3',
                                                'use' => 'required'
                                              }, 'XML::Pastor::Schema::Attribute' )
                            },
         'attributePrefix' => '_',
         'attributes' => [
                           'RefId'
                         ],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SIF::AU::Type::SIF3AssessmentSectionType',
         'contentType' => 'complex',
         'elementInfo' => {
                            'ItemSelectionAlgorithm' => bless( {
                                                               'class' => 'XML::Pastor::Builtin::anyURI',
                                                               'documentation' => bless( [
                                                                                           bless( {
                                                                                                    'text' => 'If this section is a Random or an Adaptive section, then this will specify the location of the Algorithm.'
                                                                                                  }, 'XML::Pastor::Schema::Documentation' )
                                                                                         ], 'Data::HashArray' ),
                                                               'metaClass' => 'SIF::AU::Pastor::Meta',
                                                               'minOccurs' => '0',
                                                               'name' => 'ItemSelectionAlgorithm',
                                                               'nillable' => 'true',
                                                               'scope' => 'local',
                                                               'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                               'type' => 'anyURI|http://www.w3.org/2001/XMLSchema'
                                                             }, 'XML::Pastor::Schema::Element' ),
                            'ItemSelectionAlgorithmName' => bless( {
                                                                   'class' => 'XML::Pastor::Builtin::string',
                                                                   'documentation' => bless( [
                                                                                               bless( {
                                                                                                        'text' => 'If the section is a Random or an Adaptive section, then this will identify the name of the algorithm used to select items.'
                                                                                                      }, 'XML::Pastor::Schema::Documentation' )
                                                                                             ], 'Data::HashArray' ),
                                                                   'metaClass' => 'SIF::AU::Pastor::Meta',
                                                                   'minOccurs' => '0',
                                                                   'name' => 'ItemSelectionAlgorithmName',
                                                                   'nillable' => 'true',
                                                                   'scope' => 'local',
                                                                   'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                                   'type' => 'string|http://www.w3.org/2001/XMLSchema'
                                                                 }, 'XML::Pastor::Schema::Element' ),
                            'SIF_ExtendedElements' => bless( {
                                                             'class' => 'SIF::AU::Type::SIF_ExtendedElementsType',
                                                             'metaClass' => 'SIF::AU::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'SIF_ExtendedElements',
                                                             'nillable' => 'true',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                             'type' => 'SIF_ExtendedElementsType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                           }, 'XML::Pastor::Schema::Element' ),
                            'SIF_Metadata' => bless( {
                                                     'class' => 'SIF::AU::Type::SIF_MetadataType',
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'SIF_Metadata',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'SIF_MetadataType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'SectionAssets' => bless( {
                                                      'class' => 'SIF::AU::Type::SIF3AssessmentSectionType_SectionAssets',
                                                      'metaClass' => 'SIF::AU::Pastor::Meta',
                                                      'minOccurs' => '0',
                                                      'name' => 'SectionAssets',
                                                      'nillable' => 'true',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                      'type' => 'SIF3AssessmentSectionType_SectionAssets|http://www.SIFinfo.org/au/datamodel/1.3'
                                                    }, 'XML::Pastor::Schema::Element' ),
                            'SectionIdentifiers' => bless( {
                                                           'class' => 'SIF::AU::Type::SIF3AssessmentSectionType_SectionIdentifiers',
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'SectionIdentifiers',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'SIF3AssessmentSectionType_SectionIdentifiers|http://www.SIFinfo.org/au/datamodel/1.3'
                                                         }, 'XML::Pastor::Schema::Element' ),
                            'SectionItemSequenceType' => bless( {
                                                                'class' => 'SIF::AU::Type::SIF3AssessmentSectionType_SectionItemSequenceType',
                                                                'documentation' => bless( [
                                                                                            bless( {
                                                                                                     'text' => 'Specifies how items are presented to the test taker.'
                                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                                          ], 'Data::HashArray' ),
                                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                                'minOccurs' => '0',
                                                                'name' => 'SectionItemSequenceType',
                                                                'scope' => 'local',
                                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                                'type' => 'SIF3AssessmentSectionType_SectionItemSequenceType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                              }, 'XML::Pastor::Schema::Element' ),
                            'SectionItems' => bless( {
                                                     'class' => 'SIF::AU::Type::SIF3AssessmentSectionType_SectionItems',
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'SectionItems',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'SIF3AssessmentSectionType_SectionItems|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'SectionName' => bless( {
                                                    'class' => 'XML::Pastor::Builtin::normalizedString',
                                                    'documentation' => bless( [
                                                                                bless( {
                                                                                         'text' => 'If the authoring system provides for a section name then this element is used to store that information.'
                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                              ], 'Data::HashArray' ),
                                                    'metaClass' => 'SIF::AU::Pastor::Meta',
                                                    'minOccurs' => '0',
                                                    'name' => 'SectionName',
                                                    'nillable' => 'true',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                    'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                  }, 'XML::Pastor::Schema::Element' ),
                            'SectionPublishDate' => bless( {
                                                           'class' => 'XML::Pastor::Builtin::dateTime',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'The date that this version of the section was published (published means made available for use). If the SectionVersion element is provided, then this date should also be provided. '
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'SectionPublishDate',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'dateTime|http://www.w3.org/2001/XMLSchema'
                                                         }, 'XML::Pastor::Schema::Element' ),
                            'SectionReentry' => bless( {
                                                       'class' => 'SIF::AU::Type::SIF3AssessmentSectionType_SectionReentry',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'Indicates that this section can be re-entered, meaning the test taker can return to this section after they have left the section. A common example of this is a two section test where one section does not allow the use of a calculator and the other does. Typically the test taker cannot return to the non-calculator section after they have used a calculator.'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'SIF::AU::Pastor::Meta',
                                                       'minOccurs' => '0',
                                                       'name' => 'SectionReentry',
                                                       'nillable' => 'true',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                       'type' => 'SIF3AssessmentSectionType_SectionReentry|http://www.SIFinfo.org/au/datamodel/1.3'
                                                     }, 'XML::Pastor::Schema::Element' ),
                            'SectionSealed' => bless( {
                                                      'class' => 'SIF::AU::Type::SIF3AssessmentSectionType_SectionSealed',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'Indicates this section is sealed, meaning the test taker cannot enter the section until authorized by the proctor.'
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'SIF::AU::Pastor::Meta',
                                                      'minOccurs' => '0',
                                                      'name' => 'SectionSealed',
                                                      'nillable' => 'true',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                      'type' => 'SIF3AssessmentSectionType_SectionSealed|http://www.SIFinfo.org/au/datamodel/1.3'
                                                    }, 'XML::Pastor::Schema::Element' ),
                            'SectionTimeLimit' => bless( {
                                                         'class' => 'XML::Pastor::Builtin::duration',
                                                         'documentation' => bless( [
                                                                                     bless( {
                                                                                              'text' => 'If this section is timed, then this will identify the maximum amoutamount of time the test taker can spend within this section.'
                                                                                            }, 'XML::Pastor::Schema::Documentation' )
                                                                                   ], 'Data::HashArray' ),
                                                         'metaClass' => 'SIF::AU::Pastor::Meta',
                                                         'minOccurs' => '0',
                                                         'name' => 'SectionTimeLimit',
                                                         'nillable' => 'true',
                                                         'scope' => 'local',
                                                         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                         'type' => 'duration|http://www.w3.org/2001/XMLSchema'
                                                       }, 'XML::Pastor::Schema::Element' ),
                            'SectionVersion' => bless( {
                                                       'class' => 'XML::Pastor::Builtin::normalizedString',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'The version of the section that this object represents. New versions of the section will generate new RefIds and therefore new instances of the object. The format of the version number is defined by the assessment provider.'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'SIF::AU::Pastor::Meta',
                                                       'minOccurs' => '0',
                                                       'name' => 'SectionVersion',
                                                       'nillable' => 'true',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                       'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                     }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'SectionVersion',
                         'SectionPublishDate',
                         'SectionIdentifiers',
                         'SectionName',
                         'SectionItemSequenceType',
                         'ItemSelectionAlgorithmName',
                         'ItemSelectionAlgorithm',
                         'SectionTimeLimit',
                         'SectionSealed',
                         'SectionReentry',
                         'SectionAssets',
                         'SectionItems',
                         'SIF_Metadata',
                         'SIF_ExtendedElements'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'SIF3AssessmentSectionType',
         'scope' => 'global',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::SIF3AssessmentSectionType>  -  A class generated by L<XML::Pastor> . 


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 ATTRIBUTE ACCESSORS

=over

=item B<_RefId>(), B<RefId>()      - See L<SIF::AU::Type::RefIdType>.

=back


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<ItemSelectionAlgorithm>()      - See L<XML::Pastor::Builtin::anyURI>.

=item B<ItemSelectionAlgorithmName>()      - See L<XML::Pastor::Builtin::string>.

=item B<SIF_ExtendedElements>()      - See L<SIF::AU::Type::SIF_ExtendedElementsType>.

=item B<SIF_Metadata>()      - See L<SIF::AU::Type::SIF_MetadataType>.

=item B<SectionAssets>()      - See L<SIF::AU::Type::SIF3AssessmentSectionType_SectionAssets>.

=item B<SectionIdentifiers>()      - See L<SIF::AU::Type::SIF3AssessmentSectionType_SectionIdentifiers>.

=item B<SectionItemSequenceType>()      - See L<SIF::AU::Type::SIF3AssessmentSectionType_SectionItemSequenceType>.

=item B<SectionItems>()      - See L<SIF::AU::Type::SIF3AssessmentSectionType_SectionItems>.

=item B<SectionName>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<SectionPublishDate>()      - See L<XML::Pastor::Builtin::dateTime>.

=item B<SectionReentry>()      - See L<SIF::AU::Type::SIF3AssessmentSectionType_SectionReentry>.

=item B<SectionSealed>()      - See L<SIF::AU::Type::SIF3AssessmentSectionType_SectionSealed>.

=item B<SectionTimeLimit>()      - See L<XML::Pastor::Builtin::duration>.

=item B<SectionVersion>()      - See L<XML::Pastor::Builtin::normalizedString>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
