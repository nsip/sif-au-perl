
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::StudentContactPersonalType;

use SIF::AU::PersonInfo;
use SIF::AU::Type::AUCodeSetsEmploymentTypeType;
use SIF::AU::Type::AUCodeSetsNonSchoolEducationType;
use SIF::AU::Type::EducationalLevelType;
use SIF::AU::Type::LocalIdType;
use SIF::AU::Type::PersonInfoType;
use SIF::AU::Type::RefIdType;
use SIF::AU::Type::SIF_ExtendedElementsType;
use SIF::AU::Type::SIF_MetadataType;
use SIF::AU::Type::StudentContactPersonalType_OtherIdList;

our @ISA=qw(XML::Pastor::ComplexType);

SIF::AU::Type::StudentContactPersonalType->mk_accessors( qw(_RefId LocalId OtherIdList PersonInfo EmploymentType SchoolEducationalLevel NonSchoolEducation SIF_Metadata SIF_ExtendedElements));

# Attribute accessor aliases

sub RefId { &_RefId; }

SIF::AU::Type::StudentContactPersonalType->XmlSchemaType( bless( {
         'attributeInfo' => {
                              'RefId' => bless( {
                                                'class' => 'SIF::AU::Type::RefIdType',
                                                'documentation' => bless( [
                                                                            bless( {
                                                                                     'text' => 'The ID (GUID) that uniquely identifies the instance of the object.'
                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                          ], 'Data::HashArray' ),
                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                'name' => 'RefId',
                                                'scope' => 'local',
                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                'type' => 'RefIdType|http://www.SIFinfo.org/au/datamodel/1.3',
                                                'use' => 'required'
                                              }, 'XML::Pastor::Schema::Attribute' )
                            },
         'attributePrefix' => '_',
         'attributes' => [
                           'RefId'
                         ],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SIF::AU::Type::StudentContactPersonalType',
         'contentType' => 'complex',
         'documentation' => bless( [
                                     bless( {
                                              'text' => '
      This object contains information about the people who are referenced as student contacts.
    '
                                            }, 'XML::Pastor::Schema::Documentation' )
                                   ], 'Data::HashArray' ),
         'elementInfo' => {
                            'EmploymentType' => bless( {
                                                       'class' => 'SIF::AU::Type::AUCodeSetsEmploymentTypeType',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'Code that defines employment type. This is compulsory for Parents or Guardians of the Student.'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'SIF::AU::Pastor::Meta',
                                                       'minOccurs' => '0',
                                                       'name' => 'EmploymentType',
                                                       'nillable' => 'true',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                       'type' => 'AUCodeSetsEmploymentTypeType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                     }, 'XML::Pastor::Schema::Element' ),
                            'LocalId' => bless( {
                                                'class' => 'SIF::AU::Type::LocalIdType',
                                                'documentation' => bless( [
                                                                            bless( {
                                                                                     'text' => 'The locally-assigned identifier for this person. Note: LocalId may be used as a unique person identifier rather than a unique contact identifier. In this case there may be more than one StudentContactPersonal instance with the same LocalId.'
                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                          ], 'Data::HashArray' ),
                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                'minOccurs' => '0',
                                                'name' => 'LocalId',
                                                'nillable' => 'true',
                                                'scope' => 'local',
                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                'type' => 'LocalIdType|http://www.SIFinfo.org/au/datamodel/1.3'
                                              }, 'XML::Pastor::Schema::Element' ),
                            'NonSchoolEducation' => bless( {
                                                           'class' => 'SIF::AU::Type::AUCodeSetsNonSchoolEducationType',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => "This reflects the level of the Contact\x{2019}s Non-School Education."
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'NonSchoolEducation',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'AUCodeSetsNonSchoolEducationType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                         }, 'XML::Pastor::Schema::Element' ),
                            'OtherIdList' => bless( {
                                                    'class' => 'SIF::AU::Type::StudentContactPersonalType_OtherIdList',
                                                    'metaClass' => 'SIF::AU::Pastor::Meta',
                                                    'minOccurs' => '0',
                                                    'name' => 'OtherIdList',
                                                    'nillable' => 'true',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                    'type' => 'StudentContactPersonalType_OtherIdList|http://www.SIFinfo.org/au/datamodel/1.3'
                                                  }, 'XML::Pastor::Schema::Element' ),
                            'PersonInfo' => bless( {
                                                   'class' => 'SIF::AU::Type::PersonInfoType',
                                                   'definition' => bless( {
                                                                            'baseClasses' => [
                                                                                               'SIF::AU::Type::PersonInfoType',
                                                                                               'XML::Pastor::Element'
                                                                                             ],
                                                                            'class' => 'SIF::AU::PersonInfo',
                                                                            'isRedefinable' => 1,
                                                                            'metaClass' => 'SIF::AU::Pastor::Meta',
                                                                            'name' => 'PersonInfo',
                                                                            'scope' => 'global',
                                                                            'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                                            'type' => 'PersonInfoType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                                          }, 'XML::Pastor::Schema::Element' ),
                                                   'metaClass' => 'SIF::AU::Pastor::Meta',
                                                   'minOccurs' => '0',
                                                   'name' => 'PersonInfo',
                                                   'nameIsAutoGenerated' => 1,
                                                   'ref' => 'PersonInfo|http://www.SIFinfo.org/au/datamodel/1.3',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
                                                 }, 'XML::Pastor::Schema::Element' ),
                            'SIF_ExtendedElements' => bless( {
                                                             'class' => 'SIF::AU::Type::SIF_ExtendedElementsType',
                                                             'metaClass' => 'SIF::AU::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'SIF_ExtendedElements',
                                                             'nillable' => 'true',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                             'type' => 'SIF_ExtendedElementsType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                           }, 'XML::Pastor::Schema::Element' ),
                            'SIF_Metadata' => bless( {
                                                     'class' => 'SIF::AU::Type::SIF_MetadataType',
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'SIF_Metadata',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'SIF_MetadataType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'SchoolEducationalLevel' => bless( {
                                                               'class' => 'SIF::AU::Type::EducationalLevelType',
                                                               'documentation' => bless( [
                                                                                           bless( {
                                                                                                    'text' => 'The highest level of education completed by the contact person.'
                                                                                                  }, 'XML::Pastor::Schema::Documentation' )
                                                                                         ], 'Data::HashArray' ),
                                                               'metaClass' => 'SIF::AU::Pastor::Meta',
                                                               'minOccurs' => '0',
                                                               'name' => 'SchoolEducationalLevel',
                                                               'nillable' => 'true',
                                                               'scope' => 'local',
                                                               'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                               'type' => 'EducationalLevelType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                             }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'LocalId',
                         'OtherIdList',
                         'PersonInfo',
                         'EmploymentType',
                         'SchoolEducationalLevel',
                         'NonSchoolEducation',
                         'SIF_Metadata',
                         'SIF_ExtendedElements'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'StudentContactPersonalType',
         'scope' => 'global',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::StudentContactPersonalType>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

This object contains information about the people who are referenced as student contacts.
    


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 ATTRIBUTE ACCESSORS

=over

=item B<_RefId>(), B<RefId>()      - See L<SIF::AU::Type::RefIdType>.

=back


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<EmploymentType>()      - See L<SIF::AU::Type::AUCodeSetsEmploymentTypeType>.

=item B<LocalId>()      - See L<SIF::AU::Type::LocalIdType>.

=item B<NonSchoolEducation>()      - See L<SIF::AU::Type::AUCodeSetsNonSchoolEducationType>.

=item B<OtherIdList>()      - See L<SIF::AU::Type::StudentContactPersonalType_OtherIdList>.

=item B<PersonInfo>()      - See L<SIF::AU::Type::PersonInfoType>.

=item B<SIF_ExtendedElements>()      - See L<SIF::AU::Type::SIF_ExtendedElementsType>.

=item B<SIF_Metadata>()      - See L<SIF::AU::Type::SIF_MetadataType>.

=item B<SchoolEducationalLevel>()      - See L<SIF::AU::Type::EducationalLevelType>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
