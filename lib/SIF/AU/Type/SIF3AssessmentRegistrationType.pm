
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::SIF3AssessmentRegistrationType;

use SIF::AU::Type::IdRefType;
use SIF::AU::Type::RefIdType;
use SIF::AU::Type::SIF3AssessmentRegistrationType_AssessmentStudentSnapshot;
use SIF::AU::Type::SIF3AssessmentRegistrationType_StudentSpecialEvents;
use SIF::AU::Type::SIF3AssessmentRegistrationType_TestingStatuses;
use SIF::AU::Type::SIF_ExtendedElementsType;
use SIF::AU::Type::SIF_MetadataType;
use SIF::AU::Type::YearLevelType;

our @ISA=qw(XML::Pastor::ComplexType);

SIF::AU::Type::SIF3AssessmentRegistrationType->mk_accessors( qw(_RefId _StudentPersonalRefId _AssessmentRefId AssessmentAdministrationRefId AssessmentSessionRefId AssessmentFormRefId CreationDateTime StartDateTime EndDateTime AssessmentPlatform DaysOfInstruction RetestIndicator TestAttemptIdentifier StudentSpecialEvents TestingStatuses ScorePublishDate StudentGradeLevel AssessmentGradeLevel AssessmentStudentSnapshot LEAInfoRefId SchoolInfoRefId StaffPersonalRefId SectionInfoRefId SIF_Metadata SIF_ExtendedElements));

# Attribute accessor aliases

sub RefId { &_RefId; }
sub StudentPersonalRefId { &_StudentPersonalRefId; }
sub AssessmentRefId { &_AssessmentRefId; }

SIF::AU::Type::SIF3AssessmentRegistrationType->XmlSchemaType( bless( {
         'attributeInfo' => {
                              'AssessmentRefId' => bless( {
                                                          'class' => 'SIF::AU::Type::IdRefType',
                                                          'documentation' => bless( [
                                                                                      bless( {
                                                                                               'text' => 'The assessment that is to be taken by the student.'
                                                                                             }, 'XML::Pastor::Schema::Documentation' )
                                                                                    ], 'Data::HashArray' ),
                                                          'metaClass' => 'SIF::AU::Pastor::Meta',
                                                          'name' => 'AssessmentRefId',
                                                          'scope' => 'local',
                                                          'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                          'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3',
                                                          'use' => 'required'
                                                        }, 'XML::Pastor::Schema::Attribute' ),
                              'RefId' => bless( {
                                                'class' => 'SIF::AU::Type::RefIdType',
                                                'documentation' => bless( [
                                                                            bless( {
                                                                                     'text' => 'The GUID that uniquely identifies an instance of the object.'
                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                          ], 'Data::HashArray' ),
                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                'name' => 'RefId',
                                                'scope' => 'local',
                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                'type' => 'RefIdType|http://www.SIFinfo.org/au/datamodel/1.3',
                                                'use' => 'required'
                                              }, 'XML::Pastor::Schema::Attribute' ),
                              'StudentPersonalRefId' => bless( {
                                                               'class' => 'SIF::AU::Type::IdRefType',
                                                               'documentation' => bless( [
                                                                                           bless( {
                                                                                                    'text' => 'The student associated with the registration.'
                                                                                                  }, 'XML::Pastor::Schema::Documentation' )
                                                                                         ], 'Data::HashArray' ),
                                                               'metaClass' => 'SIF::AU::Pastor::Meta',
                                                               'name' => 'StudentPersonalRefId',
                                                               'scope' => 'local',
                                                               'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                               'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3',
                                                               'use' => 'required'
                                                             }, 'XML::Pastor::Schema::Attribute' )
                            },
         'attributePrefix' => '_',
         'attributes' => [
                           'RefId',
                           'StudentPersonalRefId',
                           'AssessmentRefId'
                         ],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SIF::AU::Type::SIF3AssessmentRegistrationType',
         'contentType' => 'complex',
         'documentation' => bless( [
                                     bless( {
                                              'text' => 'This object represents the assignment of a specific assessment to be taken by a student. A student will have multiple registrations if a given assessment is attempted more than once. This object will also track testing status information after the student has tested.'
                                            }, 'XML::Pastor::Schema::Documentation' )
                                   ], 'Data::HashArray' ),
         'elementInfo' => {
                            'AssessmentAdministrationRefId' => bless( {
                                                                      'class' => 'SIF::AU::Type::IdRefType',
                                                                      'documentation' => bless( [
                                                                                                  bless( {
                                                                                                           'text' => 'The assessment administration associated with the registration.'
                                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                                ], 'Data::HashArray' ),
                                                                      'metaClass' => 'SIF::AU::Pastor::Meta',
                                                                      'minOccurs' => '0',
                                                                      'name' => 'AssessmentAdministrationRefId',
                                                                      'nillable' => 'true',
                                                                      'scope' => 'local',
                                                                      'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                                      'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                                    }, 'XML::Pastor::Schema::Element' ),
                            'AssessmentFormRefId' => bless( {
                                                            'class' => 'SIF::AU::Type::IdRefType',
                                                            'documentation' => bless( [
                                                                                        bless( {
                                                                                                 'text' => 'Identifies the AssessmentSession that contains the location and scheduled time the assessment will/has been delivered. The session is likely identified at some time after the registration is initially created.'
                                                                                               }, 'XML::Pastor::Schema::Documentation' )
                                                                                      ], 'Data::HashArray' ),
                                                            'metaClass' => 'SIF::AU::Pastor::Meta',
                                                            'minOccurs' => '0',
                                                            'name' => 'AssessmentFormRefId',
                                                            'nillable' => 'true',
                                                            'scope' => 'local',
                                                            'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                            'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                          }, 'XML::Pastor::Schema::Element' ),
                            'AssessmentGradeLevel' => bless( {
                                                             'class' => 'SIF::AU::Type::YearLevelType',
                                                             'documentation' => bless( [
                                                                                         bless( {
                                                                                                  'text' => 'The grade or level at which the student is to be tested. This element should be omitted unless the student is being tested out-of-level.'
                                                                                                }, 'XML::Pastor::Schema::Documentation' )
                                                                                       ], 'Data::HashArray' ),
                                                             'metaClass' => 'SIF::AU::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'AssessmentGradeLevel',
                                                             'nillable' => 'true',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                             'type' => 'YearLevelType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                           }, 'XML::Pastor::Schema::Element' ),
                            'AssessmentPlatform' => bless( {
                                                           'class' => 'XML::Pastor::Builtin::token',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'Indicates if the registration is for a specific assessment delivery platform. Should be updated post-test with the actual platform used. '
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'AssessmentPlatform',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                         }, 'XML::Pastor::Schema::Element' ),
                            'AssessmentSessionRefId' => bless( {
                                                               'class' => 'SIF::AU::Type::IdRefType',
                                                               'documentation' => bless( [
                                                                                           bless( {
                                                                                                    'text' => 'Identifies the AssessmentSession that contains the location and scheduled time the assessment will/has been delivered. The session is likely identified at some time after the registration is initially created.'
                                                                                                  }, 'XML::Pastor::Schema::Documentation' )
                                                                                         ], 'Data::HashArray' ),
                                                               'metaClass' => 'SIF::AU::Pastor::Meta',
                                                               'minOccurs' => '0',
                                                               'name' => 'AssessmentSessionRefId',
                                                               'nillable' => 'true',
                                                               'scope' => 'local',
                                                               'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                               'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                             }, 'XML::Pastor::Schema::Element' ),
                            'AssessmentStudentSnapshot' => bless( {
                                                                  'class' => 'SIF::AU::Type::SIF3AssessmentRegistrationType_AssessmentStudentSnapshot',
                                                                  'metaClass' => 'SIF::AU::Pastor::Meta',
                                                                  'minOccurs' => '0',
                                                                  'name' => 'AssessmentStudentSnapshot',
                                                                  'nillable' => 'true',
                                                                  'scope' => 'local',
                                                                  'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                                  'type' => 'SIF3AssessmentRegistrationType_AssessmentStudentSnapshot|http://www.SIFinfo.org/au/datamodel/1.3'
                                                                }, 'XML::Pastor::Schema::Element' ),
                            'CreationDateTime' => bless( {
                                                         'class' => 'XML::Pastor::Builtin::dateTime',
                                                         'documentation' => bless( [
                                                                                     bless( {
                                                                                              'text' => 'Date/time assignment is made.'
                                                                                            }, 'XML::Pastor::Schema::Documentation' )
                                                                                   ], 'Data::HashArray' ),
                                                         'metaClass' => 'SIF::AU::Pastor::Meta',
                                                         'minOccurs' => '0',
                                                         'name' => 'CreationDateTime',
                                                         'scope' => 'local',
                                                         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                         'type' => 'dateTime|http://www.w3.org/2001/XMLSchema'
                                                       }, 'XML::Pastor::Schema::Element' ),
                            'DaysOfInstruction' => bless( {
                                                          'class' => 'XML::Pastor::Builtin::int',
                                                          'documentation' => bless( [
                                                                                      bless( {
                                                                                               'text' => 'This indicates the number of days of instruction the student has taken prior to testing.'
                                                                                             }, 'XML::Pastor::Schema::Documentation' )
                                                                                    ], 'Data::HashArray' ),
                                                          'metaClass' => 'SIF::AU::Pastor::Meta',
                                                          'minOccurs' => '0',
                                                          'name' => 'DaysOfInstruction',
                                                          'nillable' => 'true',
                                                          'scope' => 'local',
                                                          'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                          'type' => 'int|http://www.w3.org/2001/XMLSchema'
                                                        }, 'XML::Pastor::Schema::Element' ),
                            'EndDateTime' => bless( {
                                                    'class' => 'XML::Pastor::Builtin::dateTime',
                                                    'documentation' => bless( [
                                                                                bless( {
                                                                                         'text' => 'Date/time the assignment actually ended. Typically considered the time the test has been submitted for scoring by the test taker. Likely used for online tests only.'
                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                              ], 'Data::HashArray' ),
                                                    'metaClass' => 'SIF::AU::Pastor::Meta',
                                                    'minOccurs' => '0',
                                                    'name' => 'EndDateTime',
                                                    'nillable' => 'true',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                    'type' => 'dateTime|http://www.w3.org/2001/XMLSchema'
                                                  }, 'XML::Pastor::Schema::Element' ),
                            'LEAInfoRefId' => bless( {
                                                     'class' => 'SIF::AU::Type::IdRefType',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'Optional reference to a district associated with the registration.'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'LEAInfoRefId',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'RetestIndicator' => bless( {
                                                        'class' => 'XML::Pastor::Builtin::token',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'Indicates if this registration is for a retest (retake). Retest can occur if a student failed a prior attempt and is eligible to retake. Other retest scenarios also can occur.'
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'SIF::AU::Pastor::Meta',
                                                        'minOccurs' => '0',
                                                        'name' => 'RetestIndicator',
                                                        'nillable' => 'true',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                        'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                      }, 'XML::Pastor::Schema::Element' ),
                            'SIF_ExtendedElements' => bless( {
                                                             'class' => 'SIF::AU::Type::SIF_ExtendedElementsType',
                                                             'metaClass' => 'SIF::AU::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'SIF_ExtendedElements',
                                                             'nillable' => 'true',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                             'type' => 'SIF_ExtendedElementsType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                           }, 'XML::Pastor::Schema::Element' ),
                            'SIF_Metadata' => bless( {
                                                     'class' => 'SIF::AU::Type::SIF_MetadataType',
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'SIF_Metadata',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'SIF_MetadataType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'SchoolInfoRefId' => bless( {
                                                        'class' => 'SIF::AU::Type::IdRefType',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'Optional reference to a school associated with the registration.'
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'SIF::AU::Pastor::Meta',
                                                        'minOccurs' => '0',
                                                        'name' => 'SchoolInfoRefId',
                                                        'nillable' => 'true',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                        'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                      }, 'XML::Pastor::Schema::Element' ),
                            'ScorePublishDate' => bless( {
                                                         'class' => 'XML::Pastor::Builtin::dateTime',
                                                         'documentation' => bless( [
                                                                                     bless( {
                                                                                              'text' => 'This is the date set by the testing program when the test scores are published. For formative or classroom assessments, this will likely be the date when the scoring system scored the individual test. For summative assessments, this date is likely set for a group of assessments when the processing system releases the scores.'
                                                                                            }, 'XML::Pastor::Schema::Documentation' )
                                                                                   ], 'Data::HashArray' ),
                                                         'metaClass' => 'SIF::AU::Pastor::Meta',
                                                         'minOccurs' => '0',
                                                         'name' => 'ScorePublishDate',
                                                         'nillable' => 'true',
                                                         'scope' => 'local',
                                                         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                         'type' => 'dateTime|http://www.w3.org/2001/XMLSchema'
                                                       }, 'XML::Pastor::Schema::Element' ),
                            'SectionInfoRefId' => bless( {
                                                         'class' => 'SIF::AU::Type::IdRefType',
                                                         'documentation' => bless( [
                                                                                     bless( {
                                                                                              'text' => 'Optional reference to a section (or class) associated with the registration.'
                                                                                            }, 'XML::Pastor::Schema::Documentation' )
                                                                                   ], 'Data::HashArray' ),
                                                         'metaClass' => 'SIF::AU::Pastor::Meta',
                                                         'minOccurs' => '0',
                                                         'name' => 'SectionInfoRefId',
                                                         'nillable' => 'true',
                                                         'scope' => 'local',
                                                         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                         'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                       }, 'XML::Pastor::Schema::Element' ),
                            'StaffPersonalRefId' => bless( {
                                                           'class' => 'SIF::AU::Type::IdRefType',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'Optional reference to a staff person associated with the registration.'
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'StaffPersonalRefId',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                         }, 'XML::Pastor::Schema::Element' ),
                            'StartDateTime' => bless( {
                                                      'class' => 'XML::Pastor::Builtin::dateTime',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'Date/time the assignment actually started. Typically considered the login time. For paper-based tests, this would typically be the date of testing for this student. Note: if the student \'pauses\' or otherwise logs in/out of a test after starting, this only records the first event. If further detailed analysis is required, refer to the item level details.'
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'SIF::AU::Pastor::Meta',
                                                      'minOccurs' => '0',
                                                      'name' => 'StartDateTime',
                                                      'nillable' => 'true',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                      'type' => 'dateTime|http://www.w3.org/2001/XMLSchema'
                                                    }, 'XML::Pastor::Schema::Element' ),
                            'StudentGradeLevel' => bless( {
                                                          'class' => 'SIF::AU::Type::YearLevelType',
                                                          'documentation' => bless( [
                                                                                      bless( {
                                                                                               'text' => 'Grade level of the student at the time of testing.'
                                                                                             }, 'XML::Pastor::Schema::Documentation' )
                                                                                    ], 'Data::HashArray' ),
                                                          'metaClass' => 'SIF::AU::Pastor::Meta',
                                                          'minOccurs' => '0',
                                                          'name' => 'StudentGradeLevel',
                                                          'nillable' => 'true',
                                                          'scope' => 'local',
                                                          'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                          'type' => 'YearLevelType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                        }, 'XML::Pastor::Schema::Element' ),
                            'StudentSpecialEvents' => bless( {
                                                             'class' => 'SIF::AU::Type::SIF3AssessmentRegistrationType_StudentSpecialEvents',
                                                             'metaClass' => 'SIF::AU::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'StudentSpecialEvents',
                                                             'nillable' => 'true',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                             'type' => 'SIF3AssessmentRegistrationType_StudentSpecialEvents|http://www.SIFinfo.org/au/datamodel/1.3'
                                                           }, 'XML::Pastor::Schema::Element' ),
                            'TestAttemptIdentifier' => bless( {
                                                              'class' => 'XML::Pastor::Builtin::token',
                                                              'documentation' => bless( [
                                                                                          bless( {
                                                                                                   'text' => 'If the assessment delivery system assigns a unique identifier for the test attempt, then the identifier can be provided. Examples of unique identifiers for paper-based tests are batch/stack/serial and for online tests is likely a unique internal identifier. Used to locate the original attempt.'
                                                                                                 }, 'XML::Pastor::Schema::Documentation' )
                                                                                        ], 'Data::HashArray' ),
                                                              'metaClass' => 'SIF::AU::Pastor::Meta',
                                                              'minOccurs' => '0',
                                                              'name' => 'TestAttemptIdentifier',
                                                              'nillable' => 'true',
                                                              'scope' => 'local',
                                                              'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                              'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                            }, 'XML::Pastor::Schema::Element' ),
                            'TestingStatuses' => bless( {
                                                        'class' => 'SIF::AU::Type::SIF3AssessmentRegistrationType_TestingStatuses',
                                                        'metaClass' => 'SIF::AU::Pastor::Meta',
                                                        'minOccurs' => '0',
                                                        'name' => 'TestingStatuses',
                                                        'nillable' => 'true',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                        'type' => 'SIF3AssessmentRegistrationType_TestingStatuses|http://www.SIFinfo.org/au/datamodel/1.3'
                                                      }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'AssessmentAdministrationRefId',
                         'AssessmentSessionRefId',
                         'AssessmentFormRefId',
                         'CreationDateTime',
                         'StartDateTime',
                         'EndDateTime',
                         'AssessmentPlatform',
                         'DaysOfInstruction',
                         'RetestIndicator',
                         'TestAttemptIdentifier',
                         'StudentSpecialEvents',
                         'TestingStatuses',
                         'ScorePublishDate',
                         'StudentGradeLevel',
                         'AssessmentGradeLevel',
                         'AssessmentStudentSnapshot',
                         'LEAInfoRefId',
                         'SchoolInfoRefId',
                         'StaffPersonalRefId',
                         'SectionInfoRefId',
                         'SIF_Metadata',
                         'SIF_ExtendedElements'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'SIF3AssessmentRegistrationType',
         'scope' => 'global',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::SIF3AssessmentRegistrationType>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

This object represents the assignment of a specific assessment to be taken by a student. A student will have multiple registrations if a given assessment is attempted more than once. This object will also track testing status information after the student has tested.


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 ATTRIBUTE ACCESSORS

=over

=item B<_AssessmentRefId>(), B<AssessmentRefId>()      - See L<SIF::AU::Type::IdRefType>.

=item B<_RefId>(), B<RefId>()      - See L<SIF::AU::Type::RefIdType>.

=item B<_StudentPersonalRefId>(), B<StudentPersonalRefId>()      - See L<SIF::AU::Type::IdRefType>.

=back


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<AssessmentAdministrationRefId>()      - See L<SIF::AU::Type::IdRefType>.

=item B<AssessmentFormRefId>()      - See L<SIF::AU::Type::IdRefType>.

=item B<AssessmentGradeLevel>()      - See L<SIF::AU::Type::YearLevelType>.

=item B<AssessmentPlatform>()      - See L<XML::Pastor::Builtin::token>.

=item B<AssessmentSessionRefId>()      - See L<SIF::AU::Type::IdRefType>.

=item B<AssessmentStudentSnapshot>()      - See L<SIF::AU::Type::SIF3AssessmentRegistrationType_AssessmentStudentSnapshot>.

=item B<CreationDateTime>()      - See L<XML::Pastor::Builtin::dateTime>.

=item B<DaysOfInstruction>()      - See L<XML::Pastor::Builtin::int>.

=item B<EndDateTime>()      - See L<XML::Pastor::Builtin::dateTime>.

=item B<LEAInfoRefId>()      - See L<SIF::AU::Type::IdRefType>.

=item B<RetestIndicator>()      - See L<XML::Pastor::Builtin::token>.

=item B<SIF_ExtendedElements>()      - See L<SIF::AU::Type::SIF_ExtendedElementsType>.

=item B<SIF_Metadata>()      - See L<SIF::AU::Type::SIF_MetadataType>.

=item B<SchoolInfoRefId>()      - See L<SIF::AU::Type::IdRefType>.

=item B<ScorePublishDate>()      - See L<XML::Pastor::Builtin::dateTime>.

=item B<SectionInfoRefId>()      - See L<SIF::AU::Type::IdRefType>.

=item B<StaffPersonalRefId>()      - See L<SIF::AU::Type::IdRefType>.

=item B<StartDateTime>()      - See L<XML::Pastor::Builtin::dateTime>.

=item B<StudentGradeLevel>()      - See L<SIF::AU::Type::YearLevelType>.

=item B<StudentSpecialEvents>()      - See L<SIF::AU::Type::SIF3AssessmentRegistrationType_StudentSpecialEvents>.

=item B<TestAttemptIdentifier>()      - See L<XML::Pastor::Builtin::token>.

=item B<TestingStatuses>()      - See L<SIF::AU::Type::SIF3AssessmentRegistrationType_TestingStatuses>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
