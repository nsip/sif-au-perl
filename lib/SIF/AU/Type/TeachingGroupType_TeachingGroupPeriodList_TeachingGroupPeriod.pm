
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::TeachingGroupType_TeachingGroupPeriodList_TeachingGroupPeriod;

use SIF::AU::Type::HomeroomNumberType;
use SIF::AU::Type::IdRefType;
use SIF::AU::Type::LocalIdType;

our @ISA=qw(XML::Pastor::ComplexType);

SIF::AU::Type::TeachingGroupType_TeachingGroupPeriodList_TeachingGroupPeriod->mk_accessors( qw(TimeTableCellRefId RoomNumber StaffLocalId DayId PeriodId StartTime CellType));

SIF::AU::Type::TeachingGroupType_TeachingGroupPeriodList_TeachingGroupPeriod->XmlSchemaType( bless( {
         'attributeInfo' => {},
         'attributePrefix' => '_',
         'attributes' => [],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SIF::AU::Type::TeachingGroupType_TeachingGroupPeriodList_TeachingGroupPeriod',
         'contentType' => 'complex',
         'elementInfo' => {
                            'CellType' => bless( {
                                                 'class' => 'XML::Pastor::Builtin::normalizedString',
                                                 'documentation' => bless( [
                                                                             bless( {
                                                                                      'text' => 'Type of Lesson/Session  eg Teaching, Lunch etc'
                                                                                    }, 'XML::Pastor::Schema::Documentation' )
                                                                           ], 'Data::HashArray' ),
                                                 'metaClass' => 'SIF::AU::Pastor::Meta',
                                                 'minOccurs' => '0',
                                                 'name' => 'CellType',
                                                 'nillable' => 'true',
                                                 'scope' => 'local',
                                                 'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                 'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                               }, 'XML::Pastor::Schema::Element' ),
                            'DayId' => bless( {
                                              'class' => 'SIF::AU::Type::LocalIdType',
                                              'documentation' => bless( [
                                                                          bless( {
                                                                                   'text' => 'Day Id '
                                                                                 }, 'XML::Pastor::Schema::Documentation' )
                                                                        ], 'Data::HashArray' ),
                                              'metaClass' => 'SIF::AU::Pastor::Meta',
                                              'minOccurs' => '0',
                                              'name' => 'DayId',
                                              'scope' => 'local',
                                              'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                              'type' => 'LocalIdType|http://www.SIFinfo.org/au/datamodel/1.3'
                                            }, 'XML::Pastor::Schema::Element' ),
                            'PeriodId' => bless( {
                                                 'class' => 'SIF::AU::Type::LocalIdType',
                                                 'documentation' => bless( [
                                                                             bless( {
                                                                                      'text' => 'Period Id within the Day Id. Either Period Id or starting time must be provided.'
                                                                                    }, 'XML::Pastor::Schema::Documentation' )
                                                                           ], 'Data::HashArray' ),
                                                 'metaClass' => 'SIF::AU::Pastor::Meta',
                                                 'minOccurs' => '0',
                                                 'name' => 'PeriodId',
                                                 'nillable' => 'true',
                                                 'scope' => 'local',
                                                 'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                 'type' => 'LocalIdType|http://www.SIFinfo.org/au/datamodel/1.3'
                                               }, 'XML::Pastor::Schema::Element' ),
                            'RoomNumber' => bless( {
                                                   'class' => 'SIF::AU::Type::HomeroomNumberType',
                                                   'documentation' => bless( [
                                                                               bless( {
                                                                                        'text' => 'Room number as presented to the user/application.'
                                                                                      }, 'XML::Pastor::Schema::Documentation' )
                                                                             ], 'Data::HashArray' ),
                                                   'metaClass' => 'SIF::AU::Pastor::Meta',
                                                   'minOccurs' => '0',
                                                   'name' => 'RoomNumber',
                                                   'nillable' => 'true',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                   'type' => 'HomeroomNumberType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                 }, 'XML::Pastor::Schema::Element' ),
                            'StaffLocalId' => bless( {
                                                     'class' => 'SIF::AU::Type::LocalIdType',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'Local Id of Staff member scheduled to take this class.'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'StaffLocalId',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'LocalIdType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'StartTime' => bless( {
                                                  'class' => 'XML::Pastor::Builtin::time',
                                                  'documentation' => bless( [
                                                                              bless( {
                                                                                       'text' => 'Starting time of class within the Day Id. Either Period Id or starting time must be provided.'
                                                                                     }, 'XML::Pastor::Schema::Documentation' )
                                                                            ], 'Data::HashArray' ),
                                                  'metaClass' => 'SIF::AU::Pastor::Meta',
                                                  'minOccurs' => '0',
                                                  'name' => 'StartTime',
                                                  'nillable' => 'true',
                                                  'scope' => 'local',
                                                  'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                  'type' => 'time|http://www.w3.org/2001/XMLSchema'
                                                }, 'XML::Pastor::Schema::Element' ),
                            'TimeTableCellRefId' => bless( {
                                                           'class' => 'SIF::AU::Type::IdRefType',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'If the TimeTableCell has been previously published, this reference can be provided as a connection to more detailed schedule information.'
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'TimeTableCellRefId',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                         }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'TimeTableCellRefId',
                         'RoomNumber',
                         'StaffLocalId',
                         'DayId',
                         'PeriodId',
                         'StartTime',
                         'CellType'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'TeachingGroupType_TeachingGroupPeriodList_TeachingGroupPeriod',
         'nameIsAutoGenerated' => 1,
         'scope' => 'local',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::TeachingGroupType_TeachingGroupPeriodList_TeachingGroupPeriod>  -  A class generated by L<XML::Pastor> . 


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<CellType>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<DayId>()      - See L<SIF::AU::Type::LocalIdType>.

=item B<PeriodId>()      - See L<SIF::AU::Type::LocalIdType>.

=item B<RoomNumber>()      - See L<SIF::AU::Type::HomeroomNumberType>.

=item B<StaffLocalId>()      - See L<SIF::AU::Type::LocalIdType>.

=item B<StartTime>()      - See L<XML::Pastor::Builtin::time>.

=item B<TimeTableCellRefId>()      - See L<SIF::AU::Type::IdRefType>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
