
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::IdentityType_PasswordList_Password;

use SIF::AU::Type::IdentityType_PasswordList_Password_Algorithm;
use SIF::AU::Type::XSBase64BinaryOrEmpty;

our @ISA=qw(SIF::AU::Type::XSBase64BinaryOrEmpty);

SIF::AU::Type::IdentityType_PasswordList_Password->mk_accessors( qw(_Algorithm _KeyName));

# Attribute accessor aliases

sub Algorithm { &_Algorithm; }
sub KeyName { &_KeyName; }

SIF::AU::Type::IdentityType_PasswordList_Password->XmlSchemaType( bless( {
         'attributeInfo' => {
                              'Algorithm' => bless( {
                                                    'class' => 'SIF::AU::Type::IdentityType_PasswordList_Password_Algorithm',
                                                    'documentation' => bless( [
                                                                                bless( {
                                                                                         'text' => 'The method used to encrypt the user\'s password. See the implementation details below.'
                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                              ], 'Data::HashArray' ),
                                                    'metaClass' => 'SIF::AU::Pastor::Meta',
                                                    'name' => 'Algorithm',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                    'type' => 'IdentityType_PasswordList_Password_Algorithm|http://www.SIFinfo.org/au/datamodel/1.3',
                                                    'use' => 'required'
                                                  }, 'XML::Pastor::Schema::Attribute' ),
                              'KeyName' => bless( {
                                                  'class' => 'XML::Pastor::Builtin::normalizedString',
                                                  'documentation' => bless( [
                                                                              bless( {
                                                                                       'text' => 'The name of the key to be used for decryption of the password. Left blank for hash algorithms (MD5 and SHA1).'
                                                                                     }, 'XML::Pastor::Schema::Documentation' )
                                                                            ], 'Data::HashArray' ),
                                                  'metaClass' => 'SIF::AU::Pastor::Meta',
                                                  'name' => 'KeyName',
                                                  'scope' => 'local',
                                                  'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                  'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema',
                                                  'use' => 'required'
                                                }, 'XML::Pastor::Schema::Attribute' )
                            },
         'attributePrefix' => '_',
         'attributes' => [
                           'Algorithm',
                           'KeyName'
                         ],
         'base' => 'XSBase64BinaryOrEmpty|http://www.SIFinfo.org/au/datamodel/1.3',
         'baseClasses' => [
                            'SIF::AU::Type::XSBase64BinaryOrEmpty'
                          ],
         'class' => 'SIF::AU::Type::IdentityType_PasswordList_Password',
         'contentType' => 'complex',
         'derivedBy' => 'extension',
         'elementInfo' => {},
         'elements' => [],
         'isRedefinable' => 1,
         'isSimpleContent' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'IdentityType_PasswordList_Password',
         'nameIsAutoGenerated' => 1,
         'scope' => 'local',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
         'xAttributeInfo' => {
                               'Algorithm' => bless( {
                                                     'class' => 'SIF::AU::Type::IdentityType_PasswordList_Password_Algorithm',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'The method used to encrypt the user\'s password. See the implementation details below.'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'name' => 'Algorithm',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'IdentityType_PasswordList_Password_Algorithm|http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'use' => 'required'
                                                   }, 'XML::Pastor::Schema::Attribute' ),
                               'KeyName' => bless( {
                                                   'class' => 'XML::Pastor::Builtin::normalizedString',
                                                   'documentation' => bless( [
                                                                               bless( {
                                                                                        'text' => 'The name of the key to be used for decryption of the password. Left blank for hash algorithms (MD5 and SHA1).'
                                                                                      }, 'XML::Pastor::Schema::Documentation' )
                                                                             ], 'Data::HashArray' ),
                                                   'metaClass' => 'SIF::AU::Pastor::Meta',
                                                   'name' => 'KeyName',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                   'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema',
                                                   'use' => 'required'
                                                 }, 'XML::Pastor::Schema::Attribute' )
                             },
         'xAttributes' => [
                            'Algorithm',
                            'KeyName'
                          ]
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::IdentityType_PasswordList_Password>  -  A class generated by L<XML::Pastor> . 


=head1 ISA

This class descends from L<SIF::AU::Type::XSBase64BinaryOrEmpty>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 ATTRIBUTE ACCESSORS

=over

=item B<_Algorithm>(), B<Algorithm>()      - See L<SIF::AU::Type::IdentityType_PasswordList_Password_Algorithm>.

=item B<_KeyName>(), B<KeyName>()      - See L<XML::Pastor::Builtin::normalizedString>.

=back


=head1 SEE ALSO

L<SIF::AU::Type::XSBase64BinaryOrEmpty>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
