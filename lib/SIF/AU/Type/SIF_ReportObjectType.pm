
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::SIF_ReportObjectType;

use SIF::AU::Type::RefIdType;
use SIF::AU::Type::ReportDataObjectType;
use SIF::AU::Type::SIF_ExtendedElementsType;
use SIF::AU::Type::SIF_ExtendedQueryResultsDataModelType;
use SIF::AU::Type::SIF_MetadataType;
use SIF::AU::Type::SIF_ReportObjectType_ReportInfo;

our @ISA=qw(XML::Pastor::ComplexType);

SIF::AU::Type::SIF_ReportObjectType->mk_accessors( qw(_RefId ReportInfo ReportData SIF_ExtendedQueryResults SIF_Metadata SIF_ExtendedElements));

# Attribute accessor aliases

sub RefId { &_RefId; }

SIF::AU::Type::SIF_ReportObjectType->XmlSchemaType( bless( {
         'attributeInfo' => {
                              'RefId' => bless( {
                                                'class' => 'SIF::AU::Type::RefIdType',
                                                'documentation' => bless( [
                                                                            bless( {
                                                                                     'text' => 'The ID (GUID) that uniquely identifies this instance of a report.'
                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                          ], 'Data::HashArray' ),
                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                'name' => 'RefId',
                                                'scope' => 'local',
                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                'type' => 'RefIdType|http://www.SIFinfo.org/au/datamodel/1.3',
                                                'use' => 'required'
                                              }, 'XML::Pastor::Schema::Attribute' )
                            },
         'attributePrefix' => '_',
         'attributes' => [
                           'RefId'
                         ],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SIF::AU::Type::SIF_ReportObjectType',
         'contentType' => 'complex',
         'documentation' => bless( [
                                     bless( {
                                              'text' => '
        This object is an envelope used to send other data objects, typically reports, to authorities such as state departments
        of education, district offices, other schools, etc. It is also used to signal a data collector agent that a report is
        compiled and ready to be requested. SIF_ReportObject contains a data object, which is either complete or partial (a
        partial data object is one that contains a subset of the elements for the data object). One or a series of
        SIF_ReportObjects contained within one or a series of related SIF_Response messages makes up a complete report.
      '
                                            }, 'XML::Pastor::Schema::Documentation' )
                                   ], 'Data::HashArray' ),
         'elementInfo' => {
                            'ReportData' => bless( {
                                                   'class' => 'SIF::AU::Type::ReportDataObjectType',
                                                   'documentation' => bless( [
                                                                               bless( {
                                                                                        'text' => '
          Container element for the report content; one valid SIF object can occur as a child here. This element is conditional.
          This element or ReportInfo or SIF_ExtendedQueryResults is included but never at the same time.
          See examples of the usage of the object below.
        '
                                                                                      }, 'XML::Pastor::Schema::Documentation' )
                                                                             ], 'Data::HashArray' ),
                                                   'metaClass' => 'SIF::AU::Pastor::Meta',
                                                   'minOccurs' => '0',
                                                   'name' => 'ReportData',
                                                   'nillable' => 'true',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                   'type' => 'ReportDataObjectType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                 }, 'XML::Pastor::Schema::Element' ),
                            'ReportInfo' => bless( {
                                                   'class' => 'SIF::AU::Type::SIF_ReportObjectType_ReportInfo',
                                                   'metaClass' => 'SIF::AU::Pastor::Meta',
                                                   'minOccurs' => '0',
                                                   'name' => 'ReportInfo',
                                                   'nillable' => 'true',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                   'type' => 'SIF_ReportObjectType_ReportInfo|http://www.SIFinfo.org/au/datamodel/1.3'
                                                 }, 'XML::Pastor::Schema::Element' ),
                            'SIF_ExtendedElements' => bless( {
                                                             'class' => 'SIF::AU::Type::SIF_ExtendedElementsType',
                                                             'metaClass' => 'SIF::AU::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'SIF_ExtendedElements',
                                                             'nillable' => 'true',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                             'type' => 'SIF_ExtendedElementsType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                           }, 'XML::Pastor::Schema::Element' ),
                            'SIF_ExtendedQueryResults' => bless( {
                                                                 'class' => 'SIF::AU::Type::SIF_ExtendedQueryResultsDataModelType',
                                                                 'documentation' => bless( [
                                                                                             bless( {
                                                                                                      'text' => '
          The report content resulting from a SIF_ExtendedQuery-based report.  This element is conditional.
          This element or ReportInfo or ReportData is included but never at the same time.
        '
                                                                                                    }, 'XML::Pastor::Schema::Documentation' )
                                                                                           ], 'Data::HashArray' ),
                                                                 'metaClass' => 'SIF::AU::Pastor::Meta',
                                                                 'minOccurs' => '0',
                                                                 'name' => 'SIF_ExtendedQueryResults',
                                                                 'nillable' => 'true',
                                                                 'scope' => 'local',
                                                                 'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                                 'type' => 'SIF_ExtendedQueryResultsDataModelType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                               }, 'XML::Pastor::Schema::Element' ),
                            'SIF_Metadata' => bless( {
                                                     'class' => 'SIF::AU::Type::SIF_MetadataType',
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'SIF_Metadata',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'SIF_MetadataType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'ReportInfo',
                         'ReportData',
                         'SIF_ExtendedQueryResults',
                         'SIF_Metadata',
                         'SIF_ExtendedElements'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'SIF_ReportObjectType',
         'scope' => 'global',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::SIF_ReportObjectType>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

This object is an envelope used to send other data objects, typically reports, to authorities such as state departments
        of education, district offices, other schools, etc. It is also used to signal a data collector agent that a report is
        compiled and ready to be requested. SIF_ReportObject contains a data object, which is either complete or partial (a
        partial data object is one that contains a subset of the elements for the data object). One or a series of
        SIF_ReportObjects contained within one or a series of related SIF_Response messages makes up a complete report.
      


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 ATTRIBUTE ACCESSORS

=over

=item B<_RefId>(), B<RefId>()      - See L<SIF::AU::Type::RefIdType>.

=back


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<ReportData>()      - See L<SIF::AU::Type::ReportDataObjectType>.

=item B<ReportInfo>()      - See L<SIF::AU::Type::SIF_ReportObjectType_ReportInfo>.

=item B<SIF_ExtendedElements>()      - See L<SIF::AU::Type::SIF_ExtendedElementsType>.

=item B<SIF_ExtendedQueryResults>()      - See L<SIF::AU::Type::SIF_ExtendedQueryResultsDataModelType>.

=item B<SIF_Metadata>()      - See L<SIF::AU::Type::SIF_MetadataType>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
