
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::SIF3AssessmentSubTestType_ScoreReporting;

use SIF::AU::Type::AUCodeSetsAssessmentReportingMethodType;
use SIF::AU::Type::IdRefType;

our @ISA=qw(XML::Pastor::ComplexType);

SIF::AU::Type::SIF3AssessmentSubTestType_ScoreReporting->mk_accessors( qw(_ScoreMetric Minimum Maximum ScoreTableRefId));

# Attribute accessor aliases

sub ScoreMetric { &_ScoreMetric; }

SIF::AU::Type::SIF3AssessmentSubTestType_ScoreReporting->XmlSchemaType( bless( {
         'attributeInfo' => {
                              'ScoreMetric' => bless( {
                                                      'class' => 'SIF::AU::Type::AUCodeSetsAssessmentReportingMethodType',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'The metric or scale used to report the scores.'
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'SIF::AU::Pastor::Meta',
                                                      'name' => 'ScoreMetric',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                      'type' => 'AUCodeSetsAssessmentReportingMethodType|http://www.SIFinfo.org/au/datamodel/1.3',
                                                      'use' => 'required'
                                                    }, 'XML::Pastor::Schema::Attribute' )
                            },
         'attributePrefix' => '_',
         'attributes' => [
                           'ScoreMetric'
                         ],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SIF::AU::Type::SIF3AssessmentSubTestType_ScoreReporting',
         'contentType' => 'complex',
         'elementInfo' => {
                            'Maximum' => bless( {
                                                'class' => 'XML::Pastor::Builtin::token',
                                                'documentation' => bless( [
                                                                            bless( {
                                                                                     'text' => 'Highest possible score value.'
                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                          ], 'Data::HashArray' ),
                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                'minOccurs' => '0',
                                                'name' => 'Maximum',
                                                'nillable' => 'true',
                                                'scope' => 'local',
                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                              }, 'XML::Pastor::Schema::Element' ),
                            'Minimum' => bless( {
                                                'class' => 'XML::Pastor::Builtin::token',
                                                'documentation' => bless( [
                                                                            bless( {
                                                                                     'text' => 'Lowest possible score value.'
                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                          ], 'Data::HashArray' ),
                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                'minOccurs' => '0',
                                                'name' => 'Minimum',
                                                'nillable' => 'true',
                                                'scope' => 'local',
                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                              }, 'XML::Pastor::Schema::Element' ),
                            'ScoreTableRefId' => bless( {
                                                        'class' => 'SIF::AU::Type::IdRefType',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'This identifies the specific score table used by this subtest to generate the score if applicable. Note that the score metric in this object should match the \'to score metric\' in the score table. '
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'SIF::AU::Pastor::Meta',
                                                        'minOccurs' => '0',
                                                        'name' => 'ScoreTableRefId',
                                                        'nillable' => 'true',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                        'type' => 'IdRefType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                      }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'Minimum',
                         'Maximum',
                         'ScoreTableRefId'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'SIF3AssessmentSubTestType_ScoreReporting',
         'nameIsAutoGenerated' => 1,
         'scope' => 'local',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::SIF3AssessmentSubTestType_ScoreReporting>  -  A class generated by L<XML::Pastor> . 


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 ATTRIBUTE ACCESSORS

=over

=item B<_ScoreMetric>(), B<ScoreMetric>()      - See L<SIF::AU::Type::AUCodeSetsAssessmentReportingMethodType>.

=back


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<Maximum>()      - See L<XML::Pastor::Builtin::token>.

=item B<Minimum>()      - See L<XML::Pastor::Builtin::token>.

=item B<ScoreTableRefId>()      - See L<SIF::AU::Type::IdRefType>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
