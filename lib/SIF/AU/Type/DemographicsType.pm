
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::DemographicsType;

use SIF::AU::Type::AUCodeSetsAustralianCitizenshipStatusType;
use SIF::AU::Type::AUCodeSetsAustralianStandardClasSIFicationOfCulturalAndEthnicGroupsASCCEGType;
use SIF::AU::Type::AUCodeSetsBirthdateVerificationType;
use SIF::AU::Type::AUCodeSetsImmunisationCertificateStatusType;
use SIF::AU::Type::AUCodeSetsIndigenousStatusType;
use SIF::AU::Type::AUCodeSetsMaritalStatusAIHWType;
use SIF::AU::Type::AUCodeSetsPermanentResidentStatusType;
use SIF::AU::Type::AUCodeSetsSexCodeType;
use SIF::AU::Type::BirthDateType;
use SIF::AU::Type::CountryType;
use SIF::AU::Type::DemographicsType_CountriesOfCitizenship;
use SIF::AU::Type::DemographicsType_CountriesOfResidency;
use SIF::AU::Type::DemographicsType_DwellingArrangement;
use SIF::AU::Type::DemographicsType_Religion;
use SIF::AU::Type::DemographicsType_ReligiousEventList;
use SIF::AU::Type::DemographicsType_VisaSubClass;
use SIF::AU::Type::EnglishProficiencyType;
use SIF::AU::Type::LanguageListType;
use SIF::AU::Type::StateProvinceType;

our @ISA=qw(XML::Pastor::ComplexType);

SIF::AU::Type::DemographicsType->mk_accessors( qw(IndigenousStatus Sex BirthDate BirthDateVerification PlaceOfBirth StateOfBirth CountryOfBirth CountriesOfCitizenship CountriesOfResidency CountryArrivalDate AustralianCitizenshipStatus EnglishProficiency LanguageList DwellingArrangement Religion ReligiousEventList ReligiousRegion PermanentResident VisaSubClass VisaStatisticalCode VisaExpiryDate ImmunisationCertificateStatus CulturalBackground MaritalStatus));

SIF::AU::Type::DemographicsType->XmlSchemaType( bless( {
         'attributeInfo' => {},
         'attributePrefix' => '_',
         'attributes' => [],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SIF::AU::Type::DemographicsType',
         'contentType' => 'complex',
         'documentation' => bless( [
                                     bless( {
                                              'text' => '
        Demographics information about the student, contact, staff member, etc. 
      '
                                            }, 'XML::Pastor::Schema::Documentation' )
                                   ], 'Data::HashArray' ),
         'elementInfo' => {
                            'AustralianCitizenshipStatus' => bless( {
                                                                    'class' => 'SIF::AU::Type::AUCodeSetsAustralianCitizenshipStatusType',
                                                                    'documentation' => bless( [
                                                                                                bless( {
                                                                                                         'text' => 'The person\'s citizenship status.'
                                                                                                       }, 'XML::Pastor::Schema::Documentation' )
                                                                                              ], 'Data::HashArray' ),
                                                                    'metaClass' => 'SIF::AU::Pastor::Meta',
                                                                    'minOccurs' => '0',
                                                                    'name' => 'AustralianCitizenshipStatus',
                                                                    'nillable' => 'true',
                                                                    'scope' => 'local',
                                                                    'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                                    'type' => 'AUCodeSetsAustralianCitizenshipStatusType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                                  }, 'XML::Pastor::Schema::Element' ),
                            'BirthDate' => bless( {
                                                  'class' => 'SIF::AU::Type::BirthDateType',
                                                  'documentation' => bless( [
                                                                              bless( {
                                                                                       'text' => 'The person\'s date of birth.'
                                                                                     }, 'XML::Pastor::Schema::Documentation' )
                                                                            ], 'Data::HashArray' ),
                                                  'metaClass' => 'SIF::AU::Pastor::Meta',
                                                  'minOccurs' => '0',
                                                  'name' => 'BirthDate',
                                                  'nillable' => 'true',
                                                  'scope' => 'local',
                                                  'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                  'type' => 'BirthDateType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                }, 'XML::Pastor::Schema::Element' ),
                            'BirthDateVerification' => bless( {
                                                              'class' => 'SIF::AU::Type::AUCodeSetsBirthdateVerificationType',
                                                              'documentation' => bless( [
                                                                                          bless( {
                                                                                                   'text' => 'Means by which the person\'s birth date was validated.'
                                                                                                 }, 'XML::Pastor::Schema::Documentation' )
                                                                                        ], 'Data::HashArray' ),
                                                              'metaClass' => 'SIF::AU::Pastor::Meta',
                                                              'minOccurs' => '0',
                                                              'name' => 'BirthDateVerification',
                                                              'nillable' => 'true',
                                                              'scope' => 'local',
                                                              'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                              'type' => 'AUCodeSetsBirthdateVerificationType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                            }, 'XML::Pastor::Schema::Element' ),
                            'CountriesOfCitizenship' => bless( {
                                                               'class' => 'SIF::AU::Type::DemographicsType_CountriesOfCitizenship',
                                                               'metaClass' => 'SIF::AU::Pastor::Meta',
                                                               'minOccurs' => '0',
                                                               'name' => 'CountriesOfCitizenship',
                                                               'nillable' => 'true',
                                                               'scope' => 'local',
                                                               'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                               'type' => 'DemographicsType_CountriesOfCitizenship|http://www.SIFinfo.org/au/datamodel/1.3'
                                                             }, 'XML::Pastor::Schema::Element' ),
                            'CountriesOfResidency' => bless( {
                                                             'class' => 'SIF::AU::Type::DemographicsType_CountriesOfResidency',
                                                             'metaClass' => 'SIF::AU::Pastor::Meta',
                                                             'minOccurs' => '0',
                                                             'name' => 'CountriesOfResidency',
                                                             'nillable' => 'true',
                                                             'scope' => 'local',
                                                             'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                             'type' => 'DemographicsType_CountriesOfResidency|http://www.SIFinfo.org/au/datamodel/1.3'
                                                           }, 'XML::Pastor::Schema::Element' ),
                            'CountryArrivalDate' => bless( {
                                                           'class' => 'XML::Pastor::Builtin::date',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'Date the person first arrived in the country.'
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'CountryArrivalDate',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                         }, 'XML::Pastor::Schema::Element' ),
                            'CountryOfBirth' => bless( {
                                                       'class' => 'SIF::AU::Type::CountryType',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'The person\'s country of birth.'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'SIF::AU::Pastor::Meta',
                                                       'minOccurs' => '0',
                                                       'name' => 'CountryOfBirth',
                                                       'nillable' => 'true',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                       'type' => 'CountryType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                     }, 'XML::Pastor::Schema::Element' ),
                            'CulturalBackground' => bless( {
                                                           'class' => 'SIF::AU::Type::AUCodeSetsAustralianStandardClasSIFicationOfCulturalAndEthnicGroupsASCCEGType',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'Used to indicate cultural background. '
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'CulturalBackground',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'AUCodeSetsAustralianStandardClasSIFicationOfCulturalAndEthnicGroupsASCCEGType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                         }, 'XML::Pastor::Schema::Element' ),
                            'DwellingArrangement' => bless( {
                                                            'class' => 'SIF::AU::Type::DemographicsType_DwellingArrangement',
                                                            'metaClass' => 'SIF::AU::Pastor::Meta',
                                                            'minOccurs' => '0',
                                                            'name' => 'DwellingArrangement',
                                                            'nillable' => 'true',
                                                            'scope' => 'local',
                                                            'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                            'type' => 'DemographicsType_DwellingArrangement|http://www.SIFinfo.org/au/datamodel/1.3'
                                                          }, 'XML::Pastor::Schema::Element' ),
                            'EnglishProficiency' => bless( {
                                                           'class' => 'SIF::AU::Type::EnglishProficiencyType',
                                                           'documentation' => bless( [
                                                                                       bless( {
                                                                                                'text' => 'Person\'s proficiency in English.'
                                                                                              }, 'XML::Pastor::Schema::Documentation' )
                                                                                     ], 'Data::HashArray' ),
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'EnglishProficiency',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'EnglishProficiencyType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                         }, 'XML::Pastor::Schema::Element' ),
                            'ImmunisationCertificateStatus' => bless( {
                                                                      'class' => 'SIF::AU::Type::AUCodeSetsImmunisationCertificateStatusType',
                                                                      'documentation' => bless( [
                                                                                                  bless( {
                                                                                                           'text' => 'Status of Immunisation Certificate'
                                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                                ], 'Data::HashArray' ),
                                                                      'metaClass' => 'SIF::AU::Pastor::Meta',
                                                                      'minOccurs' => '0',
                                                                      'name' => 'ImmunisationCertificateStatus',
                                                                      'nillable' => 'true',
                                                                      'scope' => 'local',
                                                                      'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                                      'type' => 'AUCodeSetsImmunisationCertificateStatusType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                                    }, 'XML::Pastor::Schema::Element' ),
                            'IndigenousStatus' => bless( {
                                                         'class' => 'SIF::AU::Type::AUCodeSetsIndigenousStatusType',
                                                         'documentation' => bless( [
                                                                                     bless( {
                                                                                              'text' => 'Whether or not the person identifies themselves as being of Aboriginal and/or Torres Strait Islander descent.'
                                                                                            }, 'XML::Pastor::Schema::Documentation' )
                                                                                   ], 'Data::HashArray' ),
                                                         'metaClass' => 'SIF::AU::Pastor::Meta',
                                                         'minOccurs' => '0',
                                                         'name' => 'IndigenousStatus',
                                                         'nillable' => 'true',
                                                         'scope' => 'local',
                                                         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                         'type' => 'AUCodeSetsIndigenousStatusType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                       }, 'XML::Pastor::Schema::Element' ),
                            'LanguageList' => bless( {
                                                     'class' => 'SIF::AU::Type::LanguageListType',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'List of languages an individual uses to communicate.'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'LanguageList',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'LanguageListType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'MaritalStatus' => bless( {
                                                      'class' => 'SIF::AU::Type::AUCodeSetsMaritalStatusAIHWType',
                                                      'documentation' => bless( [
                                                                                  bless( {
                                                                                           'text' => 'The person\'s marital status.'
                                                                                         }, 'XML::Pastor::Schema::Documentation' )
                                                                                ], 'Data::HashArray' ),
                                                      'metaClass' => 'SIF::AU::Pastor::Meta',
                                                      'minOccurs' => '0',
                                                      'name' => 'MaritalStatus',
                                                      'nillable' => 'true',
                                                      'scope' => 'local',
                                                      'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                      'type' => 'AUCodeSetsMaritalStatusAIHWType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                    }, 'XML::Pastor::Schema::Element' ),
                            'PermanentResident' => bless( {
                                                          'class' => 'SIF::AU::Type::AUCodeSetsPermanentResidentStatusType',
                                                          'documentation' => bless( [
                                                                                      bless( {
                                                                                               'text' => 'Australian Residency Status (Mandatory for Student)'
                                                                                             }, 'XML::Pastor::Schema::Documentation' )
                                                                                    ], 'Data::HashArray' ),
                                                          'metaClass' => 'SIF::AU::Pastor::Meta',
                                                          'minOccurs' => '0',
                                                          'name' => 'PermanentResident',
                                                          'nillable' => 'true',
                                                          'scope' => 'local',
                                                          'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                          'type' => 'AUCodeSetsPermanentResidentStatusType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                        }, 'XML::Pastor::Schema::Element' ),
                            'PlaceOfBirth' => bless( {
                                                     'class' => 'XML::Pastor::Builtin::normalizedString',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => "The person's place of birth\x{2014}like village, town, city etc."
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'PlaceOfBirth',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'Religion' => bless( {
                                                 'class' => 'SIF::AU::Type::DemographicsType_Religion',
                                                 'metaClass' => 'SIF::AU::Pastor::Meta',
                                                 'minOccurs' => '0',
                                                 'name' => 'Religion',
                                                 'nillable' => 'true',
                                                 'scope' => 'local',
                                                 'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                 'type' => 'DemographicsType_Religion|http://www.SIFinfo.org/au/datamodel/1.3'
                                               }, 'XML::Pastor::Schema::Element' ),
                            'ReligiousEventList' => bless( {
                                                           'class' => 'SIF::AU::Type::DemographicsType_ReligiousEventList',
                                                           'metaClass' => 'SIF::AU::Pastor::Meta',
                                                           'minOccurs' => '0',
                                                           'name' => 'ReligiousEventList',
                                                           'nillable' => 'true',
                                                           'scope' => 'local',
                                                           'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                           'type' => 'DemographicsType_ReligiousEventList|http://www.SIFinfo.org/au/datamodel/1.3'
                                                         }, 'XML::Pastor::Schema::Element' ),
                            'ReligiousRegion' => bless( {
                                                        'class' => 'XML::Pastor::Builtin::normalizedString',
                                                        'documentation' => bless( [
                                                                                    bless( {
                                                                                             'text' => 'Belong to Religious Region - Currently Free Text.'
                                                                                           }, 'XML::Pastor::Schema::Documentation' )
                                                                                  ], 'Data::HashArray' ),
                                                        'metaClass' => 'SIF::AU::Pastor::Meta',
                                                        'minOccurs' => '0',
                                                        'name' => 'ReligiousRegion',
                                                        'nillable' => 'true',
                                                        'scope' => 'local',
                                                        'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                        'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                      }, 'XML::Pastor::Schema::Element' ),
                            'Sex' => bless( {
                                            'class' => 'SIF::AU::Type::AUCodeSetsSexCodeType',
                                            'documentation' => bless( [
                                                                        bless( {
                                                                                 'text' => '\'Sex\' is the distinction \'male\' and \'female\', as reported by the person'
                                                                               }, 'XML::Pastor::Schema::Documentation' )
                                                                      ], 'Data::HashArray' ),
                                            'metaClass' => 'SIF::AU::Pastor::Meta',
                                            'minOccurs' => '0',
                                            'name' => 'Sex',
                                            'nillable' => 'true',
                                            'scope' => 'local',
                                            'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                            'type' => 'AUCodeSetsSexCodeType|http://www.SIFinfo.org/au/datamodel/1.3'
                                          }, 'XML::Pastor::Schema::Element' ),
                            'StateOfBirth' => bless( {
                                                     'class' => 'SIF::AU::Type::StateProvinceType',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'The person\'s state of birth.'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'StateOfBirth',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'StateProvinceType|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' ),
                            'VisaExpiryDate' => bless( {
                                                       'class' => 'XML::Pastor::Builtin::date',
                                                       'documentation' => bless( [
                                                                                   bless( {
                                                                                            'text' => 'Expiry Date of Visa if one exists'
                                                                                          }, 'XML::Pastor::Schema::Documentation' )
                                                                                 ], 'Data::HashArray' ),
                                                       'metaClass' => 'SIF::AU::Pastor::Meta',
                                                       'minOccurs' => '0',
                                                       'name' => 'VisaExpiryDate',
                                                       'nillable' => 'true',
                                                       'scope' => 'local',
                                                       'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                       'type' => 'date|http://www.w3.org/2001/XMLSchema'
                                                     }, 'XML::Pastor::Schema::Element' ),
                            'VisaStatisticalCode' => bless( {
                                                            'class' => 'XML::Pastor::Builtin::normalizedString',
                                                            'documentation' => bless( [
                                                                                        bless( {
                                                                                                 'text' => 'Visa Statistical Code - Can be free text - not necessary to validate'
                                                                                               }, 'XML::Pastor::Schema::Documentation' )
                                                                                      ], 'Data::HashArray' ),
                                                            'metaClass' => 'SIF::AU::Pastor::Meta',
                                                            'minOccurs' => '0',
                                                            'name' => 'VisaStatisticalCode',
                                                            'nillable' => 'true',
                                                            'scope' => 'local',
                                                            'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                            'type' => 'normalizedString|http://www.w3.org/2001/XMLSchema'
                                                          }, 'XML::Pastor::Schema::Element' ),
                            'VisaSubClass' => bless( {
                                                     'class' => 'SIF::AU::Type::DemographicsType_VisaSubClass',
                                                     'documentation' => bless( [
                                                                                 bless( {
                                                                                          'text' => 'Visa Sub-Class - Can be free text - not necessary to validate'
                                                                                        }, 'XML::Pastor::Schema::Documentation' )
                                                                               ], 'Data::HashArray' ),
                                                     'metaClass' => 'SIF::AU::Pastor::Meta',
                                                     'minOccurs' => '0',
                                                     'name' => 'VisaSubClass',
                                                     'nillable' => 'true',
                                                     'scope' => 'local',
                                                     'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                     'type' => 'DemographicsType_VisaSubClass|http://www.SIFinfo.org/au/datamodel/1.3'
                                                   }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'IndigenousStatus',
                         'Sex',
                         'BirthDate',
                         'BirthDateVerification',
                         'PlaceOfBirth',
                         'StateOfBirth',
                         'CountryOfBirth',
                         'CountriesOfCitizenship',
                         'CountriesOfResidency',
                         'CountryArrivalDate',
                         'AustralianCitizenshipStatus',
                         'EnglishProficiency',
                         'LanguageList',
                         'DwellingArrangement',
                         'Religion',
                         'ReligiousEventList',
                         'ReligiousRegion',
                         'PermanentResident',
                         'VisaSubClass',
                         'VisaStatisticalCode',
                         'VisaExpiryDate',
                         'ImmunisationCertificateStatus',
                         'CulturalBackground',
                         'MaritalStatus'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'DemographicsType',
         'scope' => 'global',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::DemographicsType>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

Demographics information about the student, contact, staff member, etc. 
      


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<AustralianCitizenshipStatus>()      - See L<SIF::AU::Type::AUCodeSetsAustralianCitizenshipStatusType>.

=item B<BirthDate>()      - See L<SIF::AU::Type::BirthDateType>.

=item B<BirthDateVerification>()      - See L<SIF::AU::Type::AUCodeSetsBirthdateVerificationType>.

=item B<CountriesOfCitizenship>()      - See L<SIF::AU::Type::DemographicsType_CountriesOfCitizenship>.

=item B<CountriesOfResidency>()      - See L<SIF::AU::Type::DemographicsType_CountriesOfResidency>.

=item B<CountryArrivalDate>()      - See L<XML::Pastor::Builtin::date>.

=item B<CountryOfBirth>()      - See L<SIF::AU::Type::CountryType>.

=item B<CulturalBackground>()      - See L<SIF::AU::Type::AUCodeSetsAustralianStandardClasSIFicationOfCulturalAndEthnicGroupsASCCEGType>.

=item B<DwellingArrangement>()      - See L<SIF::AU::Type::DemographicsType_DwellingArrangement>.

=item B<EnglishProficiency>()      - See L<SIF::AU::Type::EnglishProficiencyType>.

=item B<ImmunisationCertificateStatus>()      - See L<SIF::AU::Type::AUCodeSetsImmunisationCertificateStatusType>.

=item B<IndigenousStatus>()      - See L<SIF::AU::Type::AUCodeSetsIndigenousStatusType>.

=item B<LanguageList>()      - See L<SIF::AU::Type::LanguageListType>.

=item B<MaritalStatus>()      - See L<SIF::AU::Type::AUCodeSetsMaritalStatusAIHWType>.

=item B<PermanentResident>()      - See L<SIF::AU::Type::AUCodeSetsPermanentResidentStatusType>.

=item B<PlaceOfBirth>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<Religion>()      - See L<SIF::AU::Type::DemographicsType_Religion>.

=item B<ReligiousEventList>()      - See L<SIF::AU::Type::DemographicsType_ReligiousEventList>.

=item B<ReligiousRegion>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<Sex>()      - See L<SIF::AU::Type::AUCodeSetsSexCodeType>.

=item B<StateOfBirth>()      - See L<SIF::AU::Type::StateProvinceType>.

=item B<VisaExpiryDate>()      - See L<XML::Pastor::Builtin::date>.

=item B<VisaStatisticalCode>()      - See L<XML::Pastor::Builtin::normalizedString>.

=item B<VisaSubClass>()      - See L<SIF::AU::Type::DemographicsType_VisaSubClass>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
