
#PASTOR: Code generated by XML::Pastor/1.0.4 at 'Wed Aug  7 12:13:32 2013'

use utf8;
use strict;
use warnings;
no warnings qw(uninitialized);

use XML::Pastor;



#================================================================

package SIF::AU::Type::SIF_ExtendedQueryDataModelType;

use SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_From;
use SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_OrderBy;
use SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_Select;
use SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_Where;

our @ISA=qw(XML::Pastor::ComplexType);

SIF::AU::Type::SIF_ExtendedQueryDataModelType->mk_accessors( qw(SIF_DestinationProvider SIF_Select SIF_From SIF_Where SIF_OrderBy));

SIF::AU::Type::SIF_ExtendedQueryDataModelType->XmlSchemaType( bless( {
         'attributeInfo' => {},
         'attributePrefix' => '_',
         'attributes' => [],
         'baseClasses' => [
                            'XML::Pastor::ComplexType'
                          ],
         'class' => 'SIF::AU::Type::SIF_ExtendedQueryDataModelType',
         'contentType' => 'complex',
         'documentation' => bless( [
                                     bless( {
                                              'text' => '
            SIF\'s default query mechanism for SIF_Request, SIF_Query, has several limitations that limit its usefulness when creating reporting applications
            that process data from a SIF zone.  SIF_Query is limited to matching only one object type per query, requiring applications to
            manually join together results as needed for reporting and general data processing.  SIF_ExtendedQuery is designed to allow for joins on
            object identifiers/RefIds and to allow retrieval of data in a row/column fashion similar to SQL.  Each returned column may contain hierarchical XML elements/objects.
            Providers and Responders in a Zone may support SIF_ExtendedQuery
            in addition to SIF_Query.  Support for SIF_ExtendedQuery can be declared in and retrieved from the Zone is various Infrastructure
            messages and objects.
          '
                                            }, 'XML::Pastor::Schema::Documentation' )
                                   ], 'Data::HashArray' ),
         'elementInfo' => {
                            'SIF_DestinationProvider' => bless( {
                                                                'class' => 'XML::Pastor::Builtin::token',
                                                                'documentation' => bless( [
                                                                                            bless( {
                                                                                                     'text' => '
            If no SIF_DestinationId applies to the request and this element is supplied, the Requester specifies that the
            extended query be routed to the Provider on record for the given object name.  If this element is omitted and no SIF_DestinationId
            applies to the request, the ZIS routes the request to the Provider on record for the object name in SIF_From.
          '
                                                                                                   }, 'XML::Pastor::Schema::Documentation' )
                                                                                          ], 'Data::HashArray' ),
                                                                'metaClass' => 'SIF::AU::Pastor::Meta',
                                                                'minOccurs' => '0',
                                                                'name' => 'SIF_DestinationProvider',
                                                                'nillable' => 'true',
                                                                'scope' => 'local',
                                                                'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                                'type' => 'token|http://www.w3.org/2001/XMLSchema'
                                                              }, 'XML::Pastor::Schema::Element' ),
                            'SIF_From' => bless( {
                                                 'class' => 'SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_From',
                                                 'metaClass' => 'SIF::AU::Pastor::Meta',
                                                 'minOccurs' => '0',
                                                 'name' => 'SIF_From',
                                                 'scope' => 'local',
                                                 'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                 'type' => 'SIF_ExtendedQueryDataModelType_SIF_From|http://www.SIFinfo.org/au/datamodel/1.3'
                                               }, 'XML::Pastor::Schema::Element' ),
                            'SIF_OrderBy' => bless( {
                                                    'class' => 'SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_OrderBy',
                                                    'metaClass' => 'SIF::AU::Pastor::Meta',
                                                    'minOccurs' => '0',
                                                    'name' => 'SIF_OrderBy',
                                                    'nillable' => 'true',
                                                    'scope' => 'local',
                                                    'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                    'type' => 'SIF_ExtendedQueryDataModelType_SIF_OrderBy|http://www.SIFinfo.org/au/datamodel/1.3'
                                                  }, 'XML::Pastor::Schema::Element' ),
                            'SIF_Select' => bless( {
                                                   'class' => 'SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_Select',
                                                   'metaClass' => 'SIF::AU::Pastor::Meta',
                                                   'minOccurs' => '0',
                                                   'name' => 'SIF_Select',
                                                   'scope' => 'local',
                                                   'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                   'type' => 'SIF_ExtendedQueryDataModelType_SIF_Select|http://www.SIFinfo.org/au/datamodel/1.3'
                                                 }, 'XML::Pastor::Schema::Element' ),
                            'SIF_Where' => bless( {
                                                  'class' => 'SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_Where',
                                                  'metaClass' => 'SIF::AU::Pastor::Meta',
                                                  'minOccurs' => '0',
                                                  'name' => 'SIF_Where',
                                                  'nillable' => 'true',
                                                  'scope' => 'local',
                                                  'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3',
                                                  'type' => 'SIF_ExtendedQueryDataModelType_SIF_Where|http://www.SIFinfo.org/au/datamodel/1.3'
                                                }, 'XML::Pastor::Schema::Element' )
                          },
         'elements' => [
                         'SIF_DestinationProvider',
                         'SIF_Select',
                         'SIF_From',
                         'SIF_Where',
                         'SIF_OrderBy'
                       ],
         'isRedefinable' => 1,
         'metaClass' => 'SIF::AU::Pastor::Meta',
         'name' => 'SIF_ExtendedQueryDataModelType',
         'scope' => 'global',
         'targetNamespace' => 'http://www.SIFinfo.org/au/datamodel/1.3'
       }, 'XML::Pastor::Schema::ComplexType' ) );

1;


__END__



=head1 NAME

B<SIF::AU::Type::SIF_ExtendedQueryDataModelType>  -  A class generated by L<XML::Pastor> . 


=head1 DESCRIPTION

SIF's default query mechanism for SIF_Request, SIF_Query, has several limitations that limit its usefulness when creating reporting applications
            that process data from a SIF zone.  SIF_Query is limited to matching only one object type per query, requiring applications to
            manually join together results as needed for reporting and general data processing.  SIF_ExtendedQuery is designed to allow for joins on
            object identifiers/RefIds and to allow retrieval of data in a row/column fashion similar to SQL.  Each returned column may contain hierarchical XML elements/objects.
            Providers and Responders in a Zone may support SIF_ExtendedQuery
            in addition to SIF_Query.  Support for SIF_ExtendedQuery can be declared in and retrieved from the Zone is various Infrastructure
            messages and objects.
          


=head1 ISA

This class descends from L<XML::Pastor::ComplexType>.


=head1 CODE GENERATION

This module was automatically generated by L<XML::Pastor> version 1.0.4 at 'Wed Aug  7 12:13:32 2013'


=head1 CHILD ELEMENT ACCESSORS

=over

=item B<SIF_DestinationProvider>()      - See L<XML::Pastor::Builtin::token>.

=item B<SIF_From>()      - See L<SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_From>.

=item B<SIF_OrderBy>()      - See L<SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_OrderBy>.

=item B<SIF_Select>()      - See L<SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_Select>.

=item B<SIF_Where>()      - See L<SIF::AU::Type::SIF_ExtendedQueryDataModelType_SIF_Where>.

=back


=head1 SEE ALSO

L<XML::Pastor::ComplexType>, L<XML::Pastor>, L<XML::Pastor::Type>, L<XML::Pastor::ComplexType>, L<XML::Pastor::SimpleType>


=cut
